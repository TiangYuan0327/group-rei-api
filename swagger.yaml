---
swagger: "2.0"
info:
  description: "This is API of a rythme game calls \"Group Rei\".\n
  It is for our school project"
  version: "0.0.0"
  title: "Group Rei"
  termsOfService: "https://github.com/ericchang922"
  contact:
    email: "ericchang922@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "http://localhost"
basePath: "/v0"
tags:
- name: "account"
  description: "包含登入及帳號管理等功能"
  externalDocs: 
    description: "參考資料"
    url: "https://google.com/"
- name: "pool"
  description: "抽卡相關的功能"
  externalDocs:
    description: "參考資料"
    url: "https://google.com/"
schemes:
- "https"
- "http"
paths:

# 帳號
  /account/login: # 登入
    post: # 種類
      tags: # 分類的標籤
      - "account"
      summary: "使用者登入" # 摘要
      description: "" #細節
      operationId: "login"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
      - name: "body"
        in: "body"
        description: "傳出帳號密碼，密碼使用MD5"
        required: true
        schema: 
          $ref: "#/definitions/LoginData"
      responses: # 回傳
        200: # 成功
          description: "login successful"
          schema: 
            $ref: "#/definitions/UserData"
        400:
          description: "login failed"
          schema: 
            $ref: "#/definitions/BadRequest"
            
      security:
        - rei_auth:
          - "read:account"
  
  /account/logout:
    post: # 種類
      tags: # 分類的標籤
        - "account"
      summary: "使用者登出" # 摘要
      description: "" #細節
      operationId: "logout"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "傳出帳號密碼，密碼使用MD5"
          required: true
          schema:
            $ref: "#/definitions/LogoutData"
      responses: # 回傳
        200: # 成功
          description: "logout successful"
          schema:
            $ref: "#/definitions/UserState"
        400:
          description: "logout failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
            - "read:account"

  /pool/purchase:
    post: # 種類
      tags: # 分類的標籤
        - "pool"
      summary: "抽卡" # 摘要
      description: "" #細節
      operationId: "gacha"
      consumes: # 請求格式
        - "application/json"
      produces: # 回傳格式
        - "application/json"
      parameters: # 請求結構
        - name: "body"
          in: "body"
          description: "進行單抽或十連抽"
          required: true
          schema:
            $ref: "#/definitions/PurchaseData"
      responses: # 回傳
        200: # 成功
          description: "gacha successful"
          schema:
            $ref: "#/definitions/PurchaseResult"
        400:
          description: "gacha failed"
          schema:
            $ref: "#/definitions/BadRequest"

      security:
        - rei_auth:
            - "read:account"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://petstore.swagger.io/oauth/authorize"
    flow: "implicit"
    scopes:
      read:pets: "read your pets"
      write:pets: "modify pets in your account"
      
# schema
definitions:
  BadRequest: # 錯誤格式
    type: "object"
    properties: 
      statusCode:
        type: "integer"
        format: "int"
      failedMsg:
        type: "string"
  LoginData: # 帳號密碼
    type: "object"
    properties: 
      uid:
        type: "string"
      password:
        type: "string"
  UserData: # 使用者資料
    type: "object"
    properties: 
      name:
        type: "string"
      birthday:
        type: "datetime"
        format: "date"
      phone:
        type: "string"
      memberLevel:
        type: "integer"
        format: "int"
        description: "金銀銅..."
      mail:
        type: "string"
  LogoutData:
    type: "object"
    properties:
      uid:
        type: "string"
      token:
        type: "string"
  UserState:
    type: "object"
    properties:
      state:
        type: "string"
      stateMessage:
        type: "string"
  PurchaseData:
    type: "object"
    properties:
      uid:
        type: "string"
      token:
        type: "string"
      gachaId:
        type: "integer"
        format: "int"
      starCandy:
        type: "integer"
        format: "int"
      gachaCount:
        type: "integer"
        format: "int"
      onceSpend:
        type: "integer"
        format: "int"
  PurchaseResult:
    type: "object"
    properties:
      propName:
        type: "string"
      propClass:
        type: "string"
      propNumber:
        type: "integer"
        format: "int"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
